import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import r2_score,classification_report,confusion_matrix
from matplotlib import style 
from sklearn.model_selection import cross_val_score
style.use('fivethirtyeight')

data=pd.read_csv('sam.csv')
x=np.array(data.iloc[:,2:4].values)
y=data['Purchased']

x_train,x_test,y_train,y_test=train_test_split(x,y,random_state=100)

def knc(k):
    knn=KNeighborsClassifier(n_neighbors=k)
    knn.fit(x_train,y_train)
    y_pred=knn.predict(x_test)
    print(confusion_matrix(y_test,y_pred))
    print(classification_report(y_test,y_pred))
    print(cross_val_score(knn,x,y,cv=100).mean())
    
    
def error():
    error_rate=[]
    for i in range(1,40):
        knn=KNeighborsClassifier(n_neighbors=i)
        knn.fit(x,y)
        y_pre_i=knn.predict(x_test)
        error_rate.append(np.mean(y_pre_i != y_test))
    print(error_rate)
    plt.figure(figsize=(10,6))
    plt.plot(range(1,40),error_rate,color='blue',linestyle='dashed',marker='o',markersize=10,markerfacecolor='red')
    plt.title('error rate vs k value')
    plt.xlabel('k value')
    plt.ylabel('error_rate')
    plt.show    
    
error()
knc(20)