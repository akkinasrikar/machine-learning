import numpy as np
import pandas as pd
from sklearn.linear_model import LinearRegression,Ridge,Lasso,ElasticNet
from sklearn import metrics
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
import matplotlib.pyplot as plt
from matplotlib import style
style.use('fivethirtyeight')

data=pd.read_csv('salary.csv')
x=np.array(data.iloc[:,0:1].values)
y=np.array(data.iloc[:,1:2].values)

x_train,x_test,y_train,y_test=train_test_split(x,y,random_state=10)

def std_sca(a):
    scalar=StandardScaler()
    scaled_data=scalar.fit_transform(a)
    return scaled_data
    
    
def lin_regression():
    slr=LinearRegression()
    slr.fit(x_train,y_train)
    y_pred=slr.predict(x_test)
    print(np.sqrt(metrics.mean_squared_error(y_test,y_pred)))
    print(metrics.r2_score(y_test,y_pred))
    plt.scatter(x,y,s=10,color='blue')
    plt.plot(x_test,y_pred,color='red')
    plt.show()

def ridge_regression():
    ridge_reg=Ridge(alpha=0.1,solver="cholesky")
    ridge_reg.fit(x_train,y_train)
    y_pred=ridge_reg.predict(x_test)
    print(np.sqrt(metrics.mean_squared_error(y_test,y_pred)))
    print(metrics.r2_score(y_test,y_pred))
    plt.scatter(x,y,s=10,color='blue')
    plt.plot(x_test,y_pred,color='green')
    plt.show()
    
def lasso_regression():
    lasso_reg=Lasso(alpha=1)
    lasso_reg.fit(x_train,y_train)
    y_pred=lasso_reg.predict(x_test)
    print(np.sqrt(metrics.mean_squared_error(y_test,y_pred)))
    print(metrics.r2_score(y_test,y_pred))
    plt.scatter(x,y,s=10,color='blue')
    plt.plot(x_test,y_pred,color='orange')
    plt.show()

def elasticnet():
    elastic_reg=ElasticNet(alpha=0.01,l1_ratio=0.5)
    elastic_reg.fit(x_train,y_train)
    y_pred=elastic_reg.predict(x_test)
    print(np.sqrt(metrics.mean_squared_error(y_test,y_pred)))
    print(metrics.r2_score(y_test,y_pred))
    plt.scatter(x,y,s=10,color='blue')
    plt.plot(x_test,y_pred,color='black')
    plt.show()
    

print("linear regression")
lin_regression()    
print("ridge regression")
ridge_regression()
print("lasso regression")
lasso_regression()
print("elastic net")
elasticnet()

#output

runfile('C:/Users/personal/Desktop/project/ridge_regression.pynb.py', wdir='C:/Users/personal/Desktop/project')
linear regression
4025.4160609718397
0.9760442172946989
ridge regression
4028.8953881309844
0.9760027875267028
lasso regression
4025.497136796368
0.9760432522990985
elastic net
4029.2466147344676
0.9759986033392263